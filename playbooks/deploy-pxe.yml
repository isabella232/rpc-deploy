---
# Copyright 2018, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in witing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather facts
  hosts: pxe_hosts
  gather_facts: "{{ gather_facts | default(true) }}"
  pre_tasks:
    - name: Gather variables for each operating system
      include_vars: "{{ item }}"
      with_first_found:
        - "{{ playbook_dir }}/vars/{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ playbook_dir }}/vars/{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ playbook_dir }}/vars/{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ playbook_dir }}/vars/{{ ansible_distribution | lower }}.yml"
        - "{{ playbook_dir }}/vars/{{ ansible_os_family | lower }}.yml"
      tags:
        - always

    - name: Install host distro packages
      package:
        pkg: "{{ item }}"
        state: "latest"
        update_cache: yes
        cache_valid_time: 600
      with_items: "{{ deploy_pxe_distro_packages }}"

    - name: Get root public key
      command: cat /root/.ssh/id_rsa.pub
      register: public_key_get
      changed_when: false
      when:
        - tftp_ssh_key is undefined

    - name: Set key facts
      set_fact:
        tftp_ssh_key: "{{ public_key_get.stdout }}"
      when:
        - tftp_ssh_key is undefined

  tasks:
    - name: Drop NGINX config
      copy:
        src: "pxe/sites-enabled.default"
        dest: /etc/nginx/sites-enabled/default
        mode: "0644"
        owner: root
        group: root
      notify:
        - restart nginx

    - name: Drop tftp-hpa configs
      template:
        src: "pxe/tftp/tftp-hpa"
        dest: /etc/default/tftpd-hpa
        mode: "0644"
        owner: root
        group: root
      notify:
        - restart tftp-hpa

    - name: Drop ipxe default menu in tftp
      template:
        src: "pxe/tftp/boot.ipxe.j2"
        dest: "/var/lib/tftpboot/boot.ipxe"
        mode: "0644"
        owner: root
        group: root

    - name: Drop ipxe default menu in http
      template:
        src: "pxe/tftp/boot.ipxe.j2"
        dest: "/var/www/pxe/boot.ipxe"
        mode: "0644"
        owner: root
        group: root

    - name: Generate deploy user and keys
      user:
        name: deploy
        home: /var/www/pxe/pxe
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: /var/www/pxe/deploy_key

    - name: Set authorized key took from file for deploy
      authorized_key:
        user: deploy
        state: present
        key: "{{ lookup('file', '/var/www/pxe/deploy_key.pub') }}"

    - name: Set deploy_key to readable to be downloaded by clients
      file:
        path: /var/www/pxe/deploy_key
        mode: 0644

    - name: Generate MAC directories for all systems
      file:
        path: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}"
        state: directory
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"

    - name: Generate MAC directory configs for all systems
      file:
        path: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/configs"
        state: directory
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"

    - name: Ensure firmware files are all systems are removed by default
      file:
        path: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/firmware"
        state: absent
      with_dict: "{{ systems }}"
      when: (update_firmware == "false") or
            (item.value.deployed == true)

    - name: Generate firmware files for all systems
      template:
        src: "pxe/tftp/firmware.ipxe.macaddr.j2"
        dest: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/firmware"
        mode: "0644"
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"
      when:
        - update_firmware == "true"
        - item.value.deployed == "false"

    - name: Ensure Preflight files on all systems are removed by default
      file:
        path: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/preflight"
        state: absent
      with_dict: "{{ systems }}"
      when: (preflight == "false") or
            (item.value.deployed == true)

    - name: Generate Preflight files for all systems
      template:
        src: "pxe/tftp/preflight.ipxe.macaddr.j2"
        dest: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/preflight"
        mode: "0644"
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"
      when:
        - preflight == "true"
        - item.value.deployed == false

    - name: Ensure provisioning files are all systems are removed by default
      file:
        path: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/provision"
        state: absent
      with_dict: "{{ systems }}"
      when: (provision_environment == "false") or
            (item.value.deployed == true)

    - name: Generate provisioning files for all systems
      template:
        src: "pxe/tftp/boot.ipxe.macaddr.j2"
        dest: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/provision"
        mode: "0644"
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"
      when:
        - provision_environment == "true"
        - item.value.deployed == false

    - name: Generate basic static networking generator for all systems
      template:
        src: "pxe/network/interfaces.sh.j2"
        dest: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/configs/interfaces.sh"
        mode: "0744"
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"

    - name: Generate config settings.yml files
      template:
        src: "pxe/tftp/settings.yml.j2"
        dest: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/configs/settings.yml"
        mode: "0644"
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"

    - name: Generate config settings.ipxe files
      template:
        src: "pxe/tftp/settings.ipxe.j2"
        dest: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/configs/settings.ipxe"
        mode: "0644"
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"

    - name: Generate host preseeds for infra roles
      template:
        src: "pxe/preseeds/{{ bios_mode | lower }}/ubuntu-server-16.04-unattended-rpc-infra.preseed.j2"
        dest: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/configs/preseed"
        mode: "0644"
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"
      when:
        - item.value.role == "infra"

    - name: Generate host preseeds for haproxy roles
      template:
        src: "pxe/preseeds/{{ bios_mode | lower }}/ubuntu-server-16.04-unattended-rpc-haproxy.preseed.j2"
        dest: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/configs/preseed"
        mode: "0644"
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"
      when:
        - item.value.role == "haproxy"

    - name: Generate host preseeds for compute roles
      template:
        src: "pxe/preseeds/{{ bios_mode | lower }}/ubuntu-server-16.04-unattended-rpc-compute.preseed.j2"
        dest: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/configs/preseed"
        mode: "0644"
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"
      when:
        - item.value.role == "compute"
   
    - name: Generate host preseeds for ceph roles
      template:
        src: "pxe/preseeds/{{ bios_mode | lower }}/ubuntu-server-16.04-unattended-rpc-ceph.preseed.j2"
        dest: "/var/www/pxe/pxe/{{ item.value.mac | replace(':', '-') | lower }}/configs/preseed"
        mode: "0644"
        owner: deploy
        group: deploy
      with_dict: "{{ systems }}"
      when:
        - item.value.role == "ceph"

    - name: Create image directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "root"
        group: "root"
        mode: "0755"
      with_items:
        - "/var/www/pxe/images/utility"

    - name: Retrieve Utility Image
      get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
        force: yes
      with_items:
         - { url: "{{ images.utility.image_netboot_kernel_url }}", dest: "/var/www/pxe/images/utility/vmlinuz" }
         - { url: "{{ images.utility.image_netboot_initrd_url }}", dest: "/var/www/pxe/images/utility/initrd.img" }
         - { url: "{{ images.utility.image_netboot_rootfs_url }}", dest: "/var/www/pxe/images/utility/rootfs.img" }

    - name: Ensure permissions are correct
      shell: |
        # Fix perms if needed
        find /var/lib/tftpboot -type d -exec chmod 0755 {} \;
        find /var/lib/tftpboot -type f -exec chmod 0644 {} \;
        find /var/www/pxe -type d -exec chmod 0755 {} \;

  environment: "{{ deployment_environment_variables | default({}) }}"

  handlers:
    - name: restart nginx
      service:
        name: "nginx"
        state: restarted
        enabled: yes

    - name: restart tftp-hpa
      service:
        name: "tftpd-hpa"
        state: restarted
        enabled: yes

    - name: restart inetd
      service:
        name: "inetutils-inetd"
        state: restarted
        enabled: yes

  tags:
    - deploy-pxe
